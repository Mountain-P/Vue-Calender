{"remainingRequest":"/Users/andytseng/Sticker/vue-calender/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andytseng/Sticker/vue-calender/src/components/HelloWorld.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/andytseng/Sticker/vue-calender/src/components/HelloWorld.vue","mtime":1576042335550},{"path":"/Users/andytseng/Sticker/vue-calender/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andytseng/Sticker/vue-calender/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andytseng/Sticker/vue-calender/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andytseng/Sticker/vue-calender/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/andytseng/Sticker/vue-calender/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andytseng/Sticker/vue-calender/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU5vdG8rU2FucytUQyZkaXNwbGF5PXN3YXAnKTsKLmZsb2F0ewogICAgcG9zaXRpb246IGZpeGVkOwogICAgYm90dG9tOiA1JTsKICAgIHJpZ2h0IDogNSU7Cn0KKnsKICAgIGZvbnQtZmFtaWx5OiAnTm90byBTYW5zIFRDJywgc2Fucy1zZXJpZjsKfQo="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <transition name=\"fade\">\n        <v-app id=\"inspire\">\n            <v-row class=\"fill-height\">\n                <v-col>\n                    <v-sheet height=\"18%\">\n                        <v-toolbar flat color=\"white\">\n                            <v-btn outlined class=\"mr-4\" @click=\"setToday\">\n                                Today\n                            </v-btn>\n                            <v-btn fab text small @click=\"prev\">\n                                <v-icon small>mdi-chevron-left</v-icon>\n                            </v-btn>\n                            <v-btn fab text small @click=\"next\">\n                                <v-icon small>mdi-chevron-right</v-icon>\n                            </v-btn>\n                            <v-spacer></v-spacer>\n\n                            <v-menu bottom right>\n                                \n                                <template v-slot:activator=\"{ on }\">\n                                    <v-btn outlined v-on=\"on\">\n                                        <span>{{ typeToLabel[type] }}</span>\n                                        <v-icon right>mdi-menu-down</v-icon>\n                                    </v-btn>\n                                </template>\n\n                                <v-list>\n                                    <v-list-item @click=\"type = 'day'\">\n                                        <v-list-item-title>Day</v-list-item-title>\n                                    </v-list-item>\n                                    <v-list-item @click=\"type = 'week'\">\n                                        <v-list-item-title>Week</v-list-item-title>\n                                    </v-list-item>\n                                    <v-list-item @click=\"type = 'month'\">\n                                        <v-list-item-title>Month</v-list-item-title>\n                                    </v-list-item>\n                                    <v-list-item @click=\"type = '4day'\">\n                                        <v-list-item-title>4 days</v-list-item-title>\n                                    </v-list-item>\n                                </v-list>\n                            </v-menu>\n                        </v-toolbar>\n                        <v-toolbar flat color=\"white\">\n                            <v-toolbar-title>{{ title }}</v-toolbar-title>\n                        </v-toolbar>\n                    </v-sheet>\n                    <v-sheet height=\"600\">\n                        <v-calendar ref=\"calendar\" v-model=\"focus\" color=\"#94acfa\" :events=\"events\" :event-color=\"getEventColor\" :event-margin-bottom=\"3\" :now=\"today\" :type=\"type\" @click:event=\"showEvent\" @click:more=\"viewDay\" @click:date=\"viewDay\" @change=\"updateRange\"></v-calendar>\n                        <v-menu v-model=\"selectedOpen\" :close-on-content-click=\"false\" :activator=\"selectedElement\" full-width offset-x>\n                            <v-card color=\"grey lighten-4\" min-width=\"300px\" flat>\n                            <v-toolbar :color=\"selectedEvent.color\" dark>\n                            <v-toolbar-title v-html=\"selectedEvent.name\"></v-toolbar-title>\n                                    <v-spacer></v-spacer>\n                                    <v-btn icon @click=\"addEvent(1)\">\n                                      <v-icon>mdi-pencil</v-icon>\n                                    </v-btn>\n                                    \n                                    \n                                        <!--\n                                        <v-btn icon>\n                                          <v-icon>mdi-heart</v-icon>\n                                        </v-btn>\n                                        <v-btn icon>\n                                          <v-icon>mdi-dots-vertical</v-icon>\n                                        </v-btn>\n                                     -->\n                                </v-toolbar>\n                                <v-card-text>\n                                    <span v-html=\"selectedEvent.details\"></span>\n                                </v-card-text>\n                                <v-card-text v-if=\"!selectedEvent.details\">\n                                    <span>尚無備註</span>\n                                </v-card-text>\n                                <v-card-actions>\n                                    <v-btn text color=\"secondary\" @click=\"selectedOpen = false\">\n                                        Cancel\n                                    </v-btn>\n                                    <v-spacer></v-spacer>\n                                    <v-btn text color=\"red\" @click=\"delete_db()\">\n                                        Delete\n                                    </v-btn>\n                                </v-card-actions>\n                            </v-card>\n                        </v-menu>\n                    </v-sheet>\n                </v-col>\n            </v-row>\n\n            <v-row justify=\"center\">\n                <v-dialog v-model=\"add_toggle\" persistent max-width=\"600px\">\n                    <v-card>\n                        <v-toolbar :color=\"add.color\" dark>\n                            <v-toolbar-title v-html=\"add.name\"></v-toolbar-title>\n                            <v-spacer></v-spacer>\n                            <v-btn icon @click=\"nextColor\">\n                                <v-icon small>fas fa-paint-brush</v-icon>\n                            </v-btn>\n                        </v-toolbar>\n                        <v-card-text>\n                            <v-container>\n                                <!------------------------------------------------------------>\n\n                                <v-row justify=\"center\">\n\n                                    <v-col cols=\"12\">\n                                        <v-menu ref=\"menu1\" v-model=\"menu1\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y full-width max-width=\"290px\" min-width=\"290px\">\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-text-field v-model=\"dateFormatted1\" label=\"開始日期*\" hint=\"MM/DD/YYYY format\" persistent-hint prepend-icon=\"fas fa-calendar-day\" @blur=\"date1 = parseDate(dateFormatted1)\" v-on=\"on\"></v-text-field>\n                                            </template>\n                                            <v-date-picker v-model=\"date1\" no-title @input=\"menu1 = false\"></v-date-picker>\n                                        </v-menu>\n                                    </v-col>\n                                    <v-col cols=\"12\">\n                                        <v-menu ref=\"menu2\" v-model=\"menu2\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y full-width max-width=\"290px\" min-width=\"290px\">\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-text-field v-model=\"dateFormatted2\" label=\"結束日期*\" hint=\"MM/DD/YYYY format\" persistent-hint prepend-icon=\"fas fa-calendar-day\" @blur=\"date2 = parseDate(dateFormatted2)\" v-on=\"on\"></v-text-field>\n                                            </template>\n                                            <v-date-picker v-model=\"date2\" no-title @input=\"menu2 = false\" :min=\"date1\"></v-date-picker>\n                                        </v-menu>\n                                    </v-col>\n\n                                    <v-col cols=\"6\">\n                                        <v-dialog ref=\"dialog1\" v-model=\"modal1\" :return-value.sync=\"time1\" persistent width=\"290px\">\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-text-field v-model=\"time1\" label=\"開始時間*\" prepend-icon=\"fas fa-clock\" readonly v-on=\"on\"></v-text-field>\n                                            </template>\n                                            <v-time-picker v-if=\"modal1\" v-model=\"time1\" full-width :max=\"time2\">\n                                                <v-btn text color=\"primary\" @click=\"modal1 = false\">Cancel</v-btn>\n                                                <v-btn text color=\"primary\" @click=\"$refs.dialog1.save(time1)\">OK</v-btn>\n                                            </v-time-picker>\n                                        </v-dialog>\n                                    </v-col>\n\n                                    <v-col cols=\"6\">\n                                        <v-dialog ref=\"dialog2\" v-model=\"modal2\" :return-value.sync=\"time2\" persistent width=\"290px\">\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-text-field v-model=\"time2\" label=\"結束時間*\" prepend-icon=\"fas fa-clock\" readonly v-on=\"on\"></v-text-field>\n                                            </template>\n                                            <v-time-picker v-if=\"modal2\" v-model=\"time2\" full-width :min=\"time1\">\n                                                <v-spacer></v-spacer>\n                                                <v-btn text color=\"primary\" @click=\"modal2 = false\">Cancel</v-btn>\n                                                <v-btn text color=\"primary\" @click=\"$refs.dialog2.save(time2)\">OK</v-btn>\n                                            </v-time-picker>\n                                        </v-dialog>\n                                    </v-col>\n\n                                    <v-col cols=\"6\">\n                                        <v-text-field v-model=\"add.name\" label=\"事件名稱*\" required @focus=\"checkFocus()\" @blur=\"checkBlur()\"></v-text-field>\n                                    </v-col>\n\n                                    <v-col cols=\"6\">\n                                        <v-text-field v-model=\"add.details\" label=\"備註\"></v-text-field>\n                                    </v-col>\n                                </v-row>\n                            </v-container>\n                            <small>*indicates required field</small>\n                        </v-card-text>\n                        <v-card-actions>\n                            <v-spacer></v-spacer>\n                            <v-btn color=\"blue darken-1\" text @click=\"add_toggle = false\">Close</v-btn>\n                            <v-btn color=\"blue darken-1\" text @click=\"send(put)\">Save</v-btn>\n                        </v-card-actions>\n                    </v-card>\n                </v-dialog>\n            </v-row>\n            <!---------------------------------------------------------------->\n\n            <div class=\"float\" v-if=\"type =='day'\">\n                <v-btn fab dark small color=\"#5165a3\" @click=\"addEvent\">\n                    <v-icon dark>mdi-plus</v-icon>\n                </v-btn>\n            </div>\n\n        </v-app>\n    </transition>\n\n</template>\n\n\n\n<style>\n    @import url('https://fonts.googleapis.com/css?family=Noto+Sans+TC&display=swap');\n    .float{\n        position: fixed;\n        bottom: 5%;\n        right : 5%;\n    }\n    *{\n        font-family: 'Noto Sans TC', sans-serif;\n    }\n</style>\n<script>\nconst axios = require('axios');\nexport default {\n  name: 'HelloWorld',\n  \n  data: vm => ({\n    today: '2019-1-1',\n    focus: '2019-1-1',\n    test : '',\n    type: 'month',\n    typeToLabel: {\n      month: 'Month',\n      week: 'Week',\n      day: 'Day',\n      '4day': '4 Days',\n    },\n    start: null,\n    end: null,\n    selectedEvent: {},\n    selectedElement: null,\n    selectedOpen: false,\n    \n    \n    add_toggle : false,\n    add : {\n        name : '',\n        details: '',\n        start: '',\n        end  : '',\n        color: 'primary'\n    },\n    put : 0,\n    colors :['primary','blue','indigo','deep-purple','red','deep-orange','teal','green','grey darken-1','black','#4285F4'],\n    colorIndex:0,\n    \n    date1: new Date(+new Date() + 8 * 3600 * 1000).toISOString().substr(0, 10),\n    \n    dateFormatted1: vm.formatDate(new Date(+new Date() + 8 * 3600 * 1000).toISOString().substr(0, 10)),\n    \n    date2: new Date(+new Date() + 8 * 3600 * 1000).toISOString().substr(0, 10),\n    \n    dateFormatted2: vm.formatDate(new Date(+new Date() + 8 * 3600 * 1000).toISOString().substr(0, 10)),\n      menu1: false,\n      menu2: false,\n    \n      time1: null,\n      time2: null,\n      modal1: false,\n      modal2: false,\n    \n    events: [],\n  }),\n  computed: {\n    title () {\n      const { start, end } = this\n      if (!start || !end) {\n        return ''\n      }\n\n      const startMonth = this.monthFormatter(start)\n      const endMonth = this.monthFormatter(end)\n      const suffixMonth = startMonth === endMonth ? '' : endMonth\n\n      const startYear = start.year\n      const endYear = end.year\n      const suffixYear = startYear === endYear ? '' : endYear\n\n      const startDay = start.day + this.nth(start.day)\n      const endDay = end.day + this.nth(end.day)\n      \n      switch (this.type) {\n        case 'month':\n          return `${startYear} ${startMonth} `\n        case 'week':\n        case '4day':\n          return `${startYear} ${startMonth} ${startDay}  ~    ${suffixYear} ${suffixMonth} ${endDay}`\n        case 'day':\n          return `${startYear} ${startMonth} ${startDay} `\n      }\n      return ''\n    },\n    monthFormatter () {\n      return this.$refs.calendar.getFormatter({\n        timeZone: 'UTC', month: 'long',\n      })\n    },\n    computedDateFormatted () {\n        return this.formatDate(this.date)\n      },\n      parseTime1() {\n          if(this.time1.length != 0){\n              return this.add.start + ' ' + this.time1;\n          }\n      },\n      parseTime2() {\n          if(this.time2.length != 0){\n              return this.add.end + ' ' + this.time2;\n          }\n      },\n      \n  },\n  mounted () {\n    this.colorIndex = 0;\n    this.$refs.calendar.checkChange();\n    this.setToday();\n    this.defaultTime();\n    this.update();\n  },\n  methods: {\n    viewDay ({ date }) {\n      this.focus = date\n      this.type = \"day\"\n    },\n    getEventColor (event) {\n      return event.color\n    },\n    setToday () {\n      this.type =\"month\";\n      var date = new Date();\n      var Y = date.getFullYear();\n      var M = date.getMonth()+1;\n      var D = date.getDate();\n      this.today = Y+'-'+M+'-'+D;\n      this.focus = this.today;\n    },\n    prev () {\n      this.$refs.calendar.prev()\n    },\n    next () {\n      this.$refs.calendar.next()\n    },\n    showEvent ({ nativeEvent, event }) {\n      const open = () => {\n        this.selectedEvent = event\n        this.selectedElement = nativeEvent.target\n        setTimeout(() => this.selectedOpen = true, 10)\n      }\n\n      if (this.selectedOpen) {\n        this.selectedOpen = false\n        setTimeout(open, 10)\n      } else {\n        open()\n      }\n\n      nativeEvent.stopPropagation()\n      console.log(this.selectedEvent);\n    },\n    updateRange ({ start, end }) {\n      // You could load events from an outside source (like database) now that we have the start and end dates on the calendar\n      this.start = start;\n      this.end = end;\n      var year = this.start.year;\n      if(this.type == '4day'){\n        if (this.end.day != 1 ){\n          this.start = start;\n          this.end.day--;\n        }\n        if(year%4===0&&year%100!==0||year%400===0){\n            console.log(this.start);\n            if(start.month == 2 &&start.day==26){\n                this.end.month--;\n                this.end.day = 29;\n            }\n        }\n      }\n    },\n    nth (d) {\n        /*\n      return d > 3 && d < 21\n        ? 'th'\n        : ['th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'][d % 10]\n        */\n        return '日'\n    },\n    accountIcon (){\n        this.defaultTime();\n        //console.log(this.time1);\n        //console.log(this.time2);\n    },\n    addEvent (x){\n        console.log(x);\n        if(x == 1){\n            var cut_start = this.selectedEvent.start.split(' ');\n            var cut_end = this.selectedEvent.end.split(' ');\n            \n            \n            this.add_toggle = true;\n            this.add.start = cut_start[1];\n            this.add.end   = cut_end[1];\n            this.add.name  = this.selectedEvent.name;\n            this.add.color = this.selectedEvent.color;\n            this.date1 = cut_start[0];\n            this.date2 = cut_end[0];\n            this.add.details = this.selectedEvent.details;\n            this.put = 1 ;\n            console.log(cut_start[0]);\n            console.log(cut_start[1]);\n            console.log(cut_end[0]);\n            console.log(cut_end[1]);\n            console.log(this.selectedEvent);\n        }else{\n            this.add_toggle = true;\n            this.add.start = this.focus;\n            this.add.end   = this.focus;\n            this.add.name  = this.focus;\n\n            this.date1 = this.focus;\n            this.date2 = this.focus;\n            this.add.details = '';\n            this.defaultTime();\n        }\n\n        \n    },\n    checkBlur(){\n        if(this.add.name==''){\n            this.add.name=this.add.start;\n        }\n    },\n    checkFocus(){\n        if(this.add.name==this.date1){\n            this.add.name='';\n        }\n        console.log(this.add.name);\n        console.log(this.date1);\n    },\n    nextColor(){\n        this.colorIndex++;\n        this.add.color = this.colors[this.colorIndex];\n        if(this.colorIndex == this.colors.length){\n            this.colorIndex = 0;\n        }\n    },\n      formatDate (date) {\n        if (!date) return null\n\n        const [year, month, day] = date.split('-')\n        return `${month}/${day}/${year}`\n      },\n      parseDate (date) {\n        if (!date) return null\n\n        const [month, day, year] = date.split('/')\n        return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n      },\n      send (x) {\n          if(x == 1){\n              console.log('update');\n              var vm = this;\n              this.add.start = this.date1;\n              this.add.end = this.date2;\n              console.log(this.add);\n              var arr = [this.selectedEvent , this.add];\n              \n            axios.post('/db_update', arr)\n              .then(function (response) {\n                console.log(response.data);\n                vm.events = response.data;\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n              \n              this.put = 0;\n              this.add_toggle = false;\n          }else{\n              var vm = this;\n              this.add.start = this.parseTime1;\n              this.add.end = this.parseTime2;\n              console.log(this.add.color);\n              this.add_toggle = false;\n              this.type = 'month';\n              axios.post('/db_add', this.add)\n              .then(function (response) {\n                console.log(response.data);\n                vm.events = response.data;\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n          }\n      },\n      defaultTime(){\n          var date = new Date();\n          var H = date.getHours() ;\n          var M = date.getMinutes() ;\n          var Ms = date.getMinutes()+1 ;\n          if(H < 10){\n              H = '0' + H;\n          };\n          if(M < 10){\n              M = '0' + M;\n          }\n          this.time1 = H + \":\" + M;\n          this.time2 = \"23:59\";\n      },\n      update (){\n          var vm = this;\n          axios.post('/db_select', '')\n          .then(function (response) {\n            console.log(response.data);\n            vm.events = response.data;\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      },\n      delete_db (){\n          this.selectedOpen = false;\n          var vm  = this;\n          console.log(this.selectedEvent);\n          axios.post('/db_delete', this.selectedEvent)\n          .then(function (response) {\n            console.log(response.data);\n            vm.events = response.data;\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n          //console.log(this.selectedEvent);\n      }\n      \n  },\n  watch: {\n      date1 (val) {\n        this.dateFormatted1 = this.formatDate(this.date1);\n        this.add.start = this.date1;\n      },\n      date2 (val) {\n        this.dateFormatted2 = this.formatDate(this.date2);\n        this.add.end = this.date2;\n      }\n    },\n\n};\n</script>\n"]}]}